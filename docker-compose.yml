version: '3.9'
services:
  app:
    build:
      context: server
      dockerfile: Dockerfile.server
    environment:
      DATABASE_URL: "${DB_DRIVER}://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
      RUST_PORT: ${APP_PORT}
      RUST_LOG: ${RUST_LOG}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_COGNITO_USER_POOL_ID: ${AWS_COGNITO_USER_POOL_ID}
      AWS_COGNITO_APP_CLIENT_ID: ${AWS_COGNITO_APP_CLIENT_ID}
      AWS_COGNITO_APP_CLIENT_SECRET: ${AWS_COGNITO_APP_CLIENT_SECRET}
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - ./server:/app
    depends_on:
      - db
    tty: true

  migrate:
    build:
      context: server
      dockerfile: Dockerfile.migrate
    environment:
      DATABASE_URL: "${DB_DRIVER}://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
    volumes:
      - ./server:/app
    depends_on:
      - db
    tty: true

  # envoy:
  #   build:
  #     context: envoy
  #     dockerfile: Dockerfile
  #   environment:
  #     ADMIN_ENVOY_PORT: ${ADMIN_ENVOY_PORT}
  #     ENVOY_PORT: ${ENVOY_PORT}
  #     APP_HOST: ${APP_HOST}
  #     APP_PORT: ${APP_PORT}
  #   ports:
  #     - ${ADMIN_ENVOY_PORT}:${ADMIN_ENVOY_PORT}
  #     - ${ENVOY_PORT}:${ENVOY_PORT}
  #   volumes:
  #     - ./envoy/log/admin_access.log:/tmp/admin_access.log
  #     - ./envoy/log/envoy.log:/tmp/envoy.log
  #   command: 
  #     - "--config-path /etc/envoy/envoy.yaml"
  #   depends_on:
  #     - app
  #   tty: true

  db:
    image: mysql:8
    command: --log-bin-trust-function-creators=1
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    platform: linux/arm64
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - db:/var/lib/mysql

networks:
  sample-aws:
    driver: bridge

volumes:
  db: